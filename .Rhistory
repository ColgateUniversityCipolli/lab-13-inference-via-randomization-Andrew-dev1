x.shift <- zebra.finches.dat$diff - mu.lower.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
low <- mu.lower.diff - delta # mirror
high<- mu.lower.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.lower.diff <- mu.lower.diff - mu0.iterate
}
}
mu.upper.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.upper.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.upper.diff)
low <- mu.upper.diff - delta # mirror
high<- mu.upper.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.upper.diff <- mu.upper.diff + mu0.iterate
}
}
rand.CI <- tibble(" " = c("close", "far", "diff"),
lower.limit = c(mu.lower.close, mu.lower.far, mu.lower.diff),
upper.limit = c(mu.upper.close, mu.upper.far, mu.upper.diff))
mu0.iterate <- 0.01
View(rand.CI)
starting.point.diff <- mean(zebra.finches.dat$diff)
mu.lower.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.lower.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
low <- mu.lower.diff - delta # mirror
high<- mu.lower.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.lower.diff <- mu.lower.diff - mu0.iterate
}
}
mu.upper.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.upper.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.upper.diff)
low <- mu.upper.diff - delta # mirror
high<- mu.upper.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.upper.diff <- mu.upper.diff + mu0.iterate
}
}
rand.CI <- tibble(" " = c("close", "far", "diff"),
lower.limit = c(mu.lower.close, mu.lower.far, mu.lower.diff),
upper.limit = c(mu.upper.close, mu.upper.far, mu.upper.diff))
View(rand.CI)
delta
View(rand.CI)
View(rand.CI)
starting.point.far <- mean(zebra.finches.dat$further)
mu.lower.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.lower.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.far) # shifting back
# p-value
# delta <- abs(mean(zebra.finches.dat$further) - mu.lower.far)
# low <- mu.lower.far - delta # mirror
# high<- mu.lower.far + delta   # xbar
# p.val <- mean(rand$xbars <= low) +
#     mean(rand$xbars >= high)
delta <- mean(zebra.finches.dat$further)
p.val <- mean(rand$xbars <= delta)
if(p.val < 0.05){
break
}else{
mu.lower.far <- mu.lower.far - mu0.iterate
}
}
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.lower.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.far) # shifting back
# p-value
delta <- mean(zebra.finches.dat$further) - mu.lower.far
low <- mu.lower.far - delta # mirror
high<- mu.lower.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars <= delta)
if(p.val < 0.05){
break
}else{
mu.lower.far <- mu.lower.far - mu0.iterate
}
}
## CI for further
starting.point.far <- mean(zebra.finches.dat$further)
mu.lower.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.lower.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.far) # shifting back
# p-value
delta <- mean(zebra.finches.dat$further) - mu.lower.far
low <- mu.lower.far - delta # mirror
high<- mu.lower.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars <= delta)
if(p.val < 0.05){
break
}else{
mu.lower.far <- mu.lower.far - mu0.iterate
}
}
mu.upper.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.upper.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.close) # shifting back
# p-value
delta <- mean(zebra.finches.dat$further) - mu.upper.far
low <- mu.upper.far - delta # mirror
high<- mu.upper.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars >= delta)
if(p.val < 0.05){
break
}else{
mu.upper.far <- mu.upper.far + mu0.iterate
}
}
mu.upper.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.upper.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.far) # shifting back
# p-value
delta <- mean(zebra.finches.dat$further) - mu.upper.far
low <- mu.upper.far - delta # mirror
high<- mu.upper.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars >= delta)
if(p.val < 0.05){
break
}else{
mu.upper.far <- mu.upper.far + mu0.iterate
}
}
mu.upper.far
view(comparisons.CI)
view(rand.CI)
## CI for further
starting.point.far <- mean(zebra.finches.dat$further)
mu.lower.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.lower.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.far) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$further) - mu.lower.far)
low <- mu.lower.far - delta # mirror
high<- mu.lower.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars <= delta)
if(p.val < 0.05){
break
}else{
mu.lower.far <- mu.lower.far - mu0.iterate
}
}
mu.upper.far <- starting.point.far
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$further - mu.upper.far
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.far) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$further) - mu.upper.far)
low <- mu.upper.far - delta # mirror
high<- mu.upper.far + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
# delta <- mean(zebra.finches.dat$further)
# p.val <- mean(rand$xbars >= delta)
if(p.val < 0.05){
break
}else{
mu.upper.far <- mu.upper.far + mu0.iterate
}
}
mu.lower.far
mu.upper.far
## CI for diff
starting.point.diff <- mean(zebra.finches.dat$diff)
mu.lower.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.lower.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
low <- mu.lower.diff - delta # mirror
high<- mu.lower.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.lower.diff <- mu.lower.diff - mu0.iterate
}
}
mu.upper.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.upper.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.upper.diff)
low <- mu.upper.diff - delta # mirror
high<- mu.upper.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.upper.diff <- mu.upper.diff + mu0.iterate
}
}
rand.CI <- tibble(Condition = c("close", "far", "diff"),
lower.limit = c(mu.lower.close, mu.lower.far, mu.lower.diff),
upper.limit = c(mu.upper.close, mu.upper.far, mu.upper.diff))
view(rand.CI)
mean(zebra.finches.dat$diff)
mean(zebra.finches.dat$closer)
mean(zebra.finches.dat$further)
## CI for diff
starting.point.diff <- mean(zebra.finches.dat$diff)
mu.lower.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.lower.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
low <- mu.lower.diff - delta # mirror
high<- mu.lower.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.lower.diff <- mu.lower.diff - mu0.iterate
}
}
mu.upper.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.upper.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.upper.diff)
low <- mu.upper.diff - delta # mirror
high<- mu.upper.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.upper.diff <- mu.upper.diff + mu0.iterate
}
}
mu.lower.diff
mu0.iterate <- 0.0001
## CI for diff
starting.point.diff <- mean(zebra.finches.dat$diff)
mu.lower.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.lower.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.lower.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
low <- mu.lower.diff - delta # mirror
high<- mu.lower.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.lower.diff <- mu.lower.diff - mu0.iterate
}
}
mu.upper.diff <- starting.point.diff
repeat{
rand <- tibble(xbars = rep(NA, R))
# PREPROCESSING: shift the data to be mean 0 under H0
x.shift <- zebra.finches.dat$diff - mu.upper.diff
# RANDOMIZE / SHUFFLE
for(i in 1:R){
curr.rand <- x.shift *
sample(x = c(-1, 1),
size = length(x.shift),
replace = T)
rand$xbars[i] <- mean(curr.rand)
}
rand <- rand |>
mutate(xbars = xbars + mu.upper.diff) # shifting back
# p-value
delta <- abs(mean(zebra.finches.dat$diff) - mu.upper.diff)
low <- mu.upper.diff - delta # mirror
high<- mu.upper.diff + delta   # xbar
p.val <- mean(rand$xbars <= low) +
mean(rand$xbars >= high)
if(p.val < 0.05){
break
}else{
mu.upper.diff <- mu.upper.diff + mu0.iterate
}
}
mu.lower.diff
mean(zebra.finches.dat$diff)
mean(zebra.finches.dat$diff) - mu.upper.diff
starting.point.diff
abs(mean(zebra.finches.dat$diff) - mu.lower.diff)
min(zebra.finches.dat$diff)
